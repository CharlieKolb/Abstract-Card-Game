// AUTOGENERATED BY Assets/Scripts/Logic/reactions/generate.py
public class Reactions {
    public class Phase {
        public class ENTER : Invokable<ENTER> {
            // Payload `phase`
            GamePhase phase;
            public ENTER(
                GS gameState,
                // Payload `phase`,
                GamePhase phase
            ) {
                this.gameState = gameState;
                // Payload `phase`
                this.phase = phase;
            }
        }
        public class EXIT : Invokable<EXIT> {
            // Payload `phase`
            GamePhase phase;
            public EXIT(
                GS gameState,
                // Payload `phase`,
                GamePhase phase
            ) {
                this.gameState = gameState;
                // Payload `phase`
                this.phase = phase;
            }
        }
    }
    public class Player {
        public class DAMAGED : Invokable<DAMAGED> {
            // Payload `player`
            Player targetPlayer;
            // Payload `damage`
            int damageAmount;
            public DAMAGED(
                GS gameState,
                // Payload `player`,
                Player targetPlayer,
                // Payload `damage`,
                int damageAmount
            ) {
                this.gameState = gameState;
                // Payload `player`
                this.targetPlayer = targetPlayer;
                // Payload `damage`
                this.damageAmount = damageAmount;
            }
        }
        public class DIED : Invokable<DIED> {
            // Payload `player`
            Player targetPlayer;
            public DIED(
                GS gameState,
                // Payload `player`,
                Player targetPlayer
            ) {
                this.gameState = gameState;
                // Payload `player`
                this.targetPlayer = targetPlayer;
            }
        }
        public class DREW : Invokable<DREW> {
            // Payload `player`
            Player targetPlayer;
            public DREW(
                GS gameState,
                // Payload `player`,
                Player targetPlayer
            ) {
                this.gameState = gameState;
                // Payload `player`
                this.targetPlayer = targetPlayer;
            }
        }
    }
}